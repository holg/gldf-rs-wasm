[package]
name = "gldf-rs-wasm"
version = "0.2.1"
authors = ["Holger Trahe <trahe@mac.com>"]
documentation = "https://github.com/holg/gldf-rs"
description = "The Webassembly package for the GLDF (General Lighting Data Format) parser and writer for Rust https://crates.io/crates/gldf-rs"
repository = "https://github.com/holg/gldf-rs-wasm"
homepage = "https://gldf.icu"
license = "GPL-3.0-or-later"
edition = "2021"


[lib]
crate-type = ["cdylib", "rlib"]

#[features]
#default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3"
#yew = { path = "../yew/packages/yew", features = ["csr"]}
#yew =  {git = "https://github.com/holg/yew.git", features = ["csr"]}
# Choose `web-sys`
yew = { version = "0.20", features = ["csr"] }
reqwest-wasm = { version = "0.11", features = ["blocking"] }
base64 = "0.13.0"
gloo = "0.8"
#gldf-rs = {path = "../gldf-rs"}
gldf-rs = "0.2.1"
wasm-bindgen = "0.2"
#wasm-bindgen_test = "0.3"
wasm-bindgen-futures = "0.4"
#once_cell = "1"
#wasmer = "1.0.2"
anyhow = {version = "1.0"}

[dependencies.web-sys]
version = "0.3.50"
features = ["File", "DragEvent", "DataTransfer"]
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
#console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3"

[build]
target = "wasm32-unknown-unknown"
#
#[target.'cfg(target_arch = "wasm32")'.dependencies]
#wasm-bindgen-futures = "0.4"
#wasm-logger = "0.2"
#log = "0.4"
#
#[features]
#hydration = ["yew/hydration"]
#ssr = ["yew/ssr", "yew/tokio"]
#
#[profile.release]
## Tell `rustc` to optimize for small code size.
#opt-level = "s"
